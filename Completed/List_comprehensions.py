# Давайте дізнаємося про розуміння списків!
# Вам дано три цілі числа 'x', 'y' і 'z', що представляють розміри кубоїда,
# а також ціле число 'n'. Надрукуйте список усіх можливих координат (i, j, k)
# на тривимірній сітці, де сума «i + j + k» не дорівнює «n».
# Тут 0 < i < x; 0 < j < y; 0 < k < z .
# Будь ласка, використовуйте розуміння списків,
# а не кілька циклів, як навчальну вправу.

# Example
# x = 1
# y = 1
# z = 2
# n = 3

# Усі перестановки [i, j, k] такі:
# [
# [0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [0,1,2],
# [1,0,0], [1,0,1], [1,0,2], [1,1,0], [1,1,1], [1,1,2]
# ].
# Виведіть масив елементів, сума яких не дорівнює n = 3.
# [
# [0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1],
# [1,0,0], [1,0,1], [1,1,0], [1,1,2]
# ].
# Формат введення
# Чотири цілі числа x, y, x і n, кожне в окремому рядку.
#
# обмеження
# Надрукуйте список у лексикографічному порядку збільшення.

# Зразок введення:
# 1
# 1
# 1
# 2
# Зразок результату:
# [[0,0,0], [0,0,1], [0,1,0], [1,0,0], [1,1,1]]
#
# Пояснення
# Кожна змінна x, y і z матиме значення 0 або 1. Усі перестановки списків у формі
# [i,j,k] = [[0,0,0], [0,0,1], [0,1,0], [0,1,1], [1,0,0], [1,0,1], [1,1,0], [1,1,1]].
# Видаліть усі масиви, сума яких дорівнює n = 2, щоб залишити лише дійсні перестановки.

# x = 1
# y = 1
# z = 2
# n = 3
#
#
# def generate_coordinates(x0, y0, z0, n0):
#     coordinates = [[i, j, k] for i in range(x0 + 1) for j in range(y0 + 1) for k in range(z0 + 1) if i + j + k != n0]
#     return coordinates
#
#
# result = generate_coordinates(x, y, z, n)
# print(result)


q = 1
w = 1
e = 2
r = 3


def generet_coordenat(x, z, y, n):
    coordenats = [[q, w, e] for q in range(x + 1) for w in range(z + 1) for e in range(y + 1) if q + w + e != n]
    return coordenats

result = generet_coordenat(q, w, e, r)
print(result)
