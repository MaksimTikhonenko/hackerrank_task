
# Пан Вінсент працює в компанії з виробництва дверних килимків.
# Одного дня він розробив новий дверний килимок з такими характеристиками:
#
# Розмір килимка має бути NxM. (N - непарне натуральне число, а M втричі більше за N)
# Дизайн повинен мати напис "WELCOME" в центрі.
# У дизайні візерунка слід використовувати лише символи |, . та -.
#
# Зразки дизайнів
# [Зображення містить два приклади дизайну килимків розміром 7x21 та 11x33]
# Формат вводу
# Один рядок, що містить значення N і M, розділені пробілом.


# План написання коду:
#
# 1. Зчитування вхідних даних:
#    - Отримати значення N і M з одного рядка вводу.
#    - Перевірити, чи N непарне і чи M = 3N.
#
# 2. Створення базової структури килимка:
#    - Ініціалізувати двовимірний масив розміром NxM.
#    - Заповнити його символами '-' як фон.
#
# 3. Додавання вертикальних ліній:
#    - Розрахувати позиції для вертикальних ліній.
#    - Додати символи '|' у відповідні місця.
#
# 4. Додавання крапок:
#    - Розрахувати позиції для крапок.
#    - Вставити символи '.' між вертикальними лініями.
#
# 5. Додавання напису "WELCOME":
#    - Розрахувати центральну позицію.
#    - Вставити напис "WELCOME" в центр килимка.
#
# 6. Виведення результату:
#    - Пройтися по двовимірному масиву.
#    - Вивести кожен рядок килимка.
#
# 7. Оптимізація та покращення:
#    - Перевірити код на відповідність всім вимогам.
#    - Оптимізувати, якщо потрібно.
#
# 8. Тестування:
#    - Протестувати на наданих прикладах (7x21 та 11x33).
#    - Додатково протестувати на інших розмірах.
#

N, M = map(int, input().split())


b = '.|.'
c = '-'
W = 'WELCOME'

for i in range(N//2):
    print((b*(2*i+1)).center(M, c))

print(W.center(M, c))

for i in range(N//2):
    print((b*(2*i+1)).center(M, c))


print('\n')


def welcome_doormat(n, m):
    midl = [('.|.'*(2*_+1)).center(m, '-') for _ in range(n//2)]
    w = 'WELCOME'.center(m, '-')
    return '\n'.join(midl + [w] + midl[::-1])


print(welcome_doormat(N, M))
