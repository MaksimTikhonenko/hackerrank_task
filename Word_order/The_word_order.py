# Ось переклад українською:
# Вам дано n слів. Деякі слова можуть повторюватися.
# Для кожного слова виведіть кількість його входжень.
# Порядок виведення має відповідати порядку появи слів у
# вхідних даних. Для уточнення дивіться приклад вхідних/вихідних даних.
# Примітка: Кожен рядок вхідних даних закінчується символом "\n".

# Усі слова складаються лише з малих літер англійського алфавіту.
# Формат вхідних даних:
# Перший рядок містить ціле число n.
# Наступні n рядків містять по одному слову.
# Формат вихідних даних:
# Виведіть 2 рядки.
# У першому рядку виведіть кількість унікальних слів з вхідних даних.
# У другому рядку виведіть кількість входжень для кожного унікального слова в порядку їх появи у вхідних даних.
# Приклад вхідних даних:
# 4
# bcdef
# abcdefg
# bcde
# bcdef
# Приклад вихідних даних:
# 3
# 2 1 1
# Пояснення:
# Є 3 унікальних слова.
# Тут "bcdef" з'являється двічі у вхідних даних на першій і останній позиціях.
# Інші слова з'являються по одному разу кожне.
# Порядок перших появ - "bcdef", "abcdefg" і "bcde", що відповідає виведенню.


n = int(4)
input_words = ["bcdef"'\n', "abcdefg"'\n', "bcde"'\n', "bcdef"'\n']

# Read input
# n = int(input())  # Зчитайте кількість слів n.
# input_words = [input().strip() for _ in range(n)]  # Створіть список для зберігання введених слів.


def word_order(words):
    # Створення структур даних:
    dct_count = {}  # Створіть словник для підрахунку кількості входжень кожного слова.
    lst_order = []  # Створіть список для збереження порядку появи унікальних слів.

    # Обробка вхідних даних:
    for word in words:  # Пройдіться по кожному слову в списку слів.
        if word in dct_count:
            dct_count[word] += 1  # Якщо слово вже є в словнику, збільште лічильник.
        else:  # Якщо слова немає, додайте його до словника з лічильником 1 і додайте до списку унікальних слів.
            dct_count[word] = 1
            lst_order.append(word)

    # Підготовка результатів:
    # Підрахуйте кількість унікальних слів (довжина списку унікальних слів).
    count_lst_order = len(lst_order)
    # Створіть список кількостей входжень для кожного унікального слова в порядку їх появи.
    numbers_to_print = [str(dct_count[word]) for word in lst_order]

    #  Виведення результатів:
    print(count_lst_order)
    print(' '.join(numbers_to_print))
    return


word_order(input_words)
